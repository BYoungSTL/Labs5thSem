Simulator report for lab_2
Tue Sep 29 16:37:47 2020
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 10.0 us      ;
; Simulation Netlist Size     ; 115 nodes    ;
; Simulation Coverage         ;      99.19 % ;
; Total Number of Transitions ; 12336        ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Stratix II   ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                      ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Option                                                                                     ; Setting    ; Default Value ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Simulation mode                                                                            ; Functional ; Timing        ;
; Start time                                                                                 ; 0 ns       ; 0 ns          ;
; Simulation results format                                                                  ; CVWF       ;               ;
; Vector input source                                                                        ; result.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On         ; On            ;
; Check outputs                                                                              ; Off        ; Off           ;
; Report simulation coverage                                                                 ; On         ; On            ;
; Display complete 1/0 value coverage report                                                 ; On         ; On            ;
; Display missing 1-value coverage report                                                    ; On         ; On            ;
; Display missing 0-value coverage report                                                    ; On         ; On            ;
; Detect setup and hold time violations                                                      ; Off        ; Off           ;
; Detect glitches                                                                            ; Off        ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off        ; Off           ;
; Generate Signal Activity File                                                              ; Off        ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off        ; Off           ;
; Group bus channels in simulation results                                                   ; Off        ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On         ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off        ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; On         ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto       ; Auto          ;
+--------------------------------------------------------------------------------------------+------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      99.19 % ;
; Total nodes checked                                 ; 115          ;
; Total output ports checked                          ; 124          ;
; Total output ports with complete 1/0-value coverage ; 123          ;
; Total output ports with no 1/0-value coverage       ; 1            ;
; Total output ports with no 1-value coverage         ; 1            ;
; Total output ports with no 0-value coverage         ; 1            ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                                                                             ;
+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                               ; Output Port Name                                                                                                           ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+------------------+
; |result|end1                                                                                                            ; |result|end1                                                                                                               ; pin_out          ;
; |result|clk                                                                                                             ; |result|clk                                                                                                                ; out              ;
; |result|end2                                                                                                            ; |result|end2                                                                                                               ; pin_out          ;
; |result|OUT[15]                                                                                                         ; |result|OUT[15]                                                                                                            ; pin_out          ;
; |result|OUT[14]                                                                                                         ; |result|OUT[14]                                                                                                            ; pin_out          ;
; |result|OUT[13]                                                                                                         ; |result|OUT[13]                                                                                                            ; pin_out          ;
; |result|OUT[12]                                                                                                         ; |result|OUT[12]                                                                                                            ; pin_out          ;
; |result|OUT[11]                                                                                                         ; |result|OUT[11]                                                                                                            ; pin_out          ;
; |result|OUT[10]                                                                                                         ; |result|OUT[10]                                                                                                            ; pin_out          ;
; |result|OUT[9]                                                                                                          ; |result|OUT[9]                                                                                                             ; pin_out          ;
; |result|OUT[8]                                                                                                          ; |result|OUT[8]                                                                                                             ; pin_out          ;
; |result|OUT[7]                                                                                                          ; |result|OUT[7]                                                                                                             ; pin_out          ;
; |result|OUT[6]                                                                                                          ; |result|OUT[6]                                                                                                             ; pin_out          ;
; |result|OUT[5]                                                                                                          ; |result|OUT[5]                                                                                                             ; pin_out          ;
; |result|OUT[4]                                                                                                          ; |result|OUT[4]                                                                                                             ; pin_out          ;
; |result|OUT[3]                                                                                                          ; |result|OUT[3]                                                                                                             ; pin_out          ;
; |result|OUT[2]                                                                                                          ; |result|OUT[2]                                                                                                             ; pin_out          ;
; |result|OUT[1]                                                                                                          ; |result|OUT[1]                                                                                                             ; pin_out          ;
; |result|OUT[0]                                                                                                          ; |result|OUT[0]                                                                                                             ; pin_out          ;
; |result|block3t:inst4|inst5[15]                                                                                         ; |result|block3t:inst4|inst5[15]                                                                                            ; out0             ;
; |result|block3t:inst4|inst5[14]                                                                                         ; |result|block3t:inst4|inst5[14]                                                                                            ; out0             ;
; |result|block3t:inst4|inst5[13]                                                                                         ; |result|block3t:inst4|inst5[13]                                                                                            ; out0             ;
; |result|block3t:inst4|inst5[12]                                                                                         ; |result|block3t:inst4|inst5[12]                                                                                            ; out0             ;
; |result|block3t:inst4|inst5[11]                                                                                         ; |result|block3t:inst4|inst5[11]                                                                                            ; out0             ;
; |result|block3t:inst4|inst5[10]                                                                                         ; |result|block3t:inst4|inst5[10]                                                                                            ; out0             ;
; |result|block3t:inst4|inst5[9]                                                                                          ; |result|block3t:inst4|inst5[9]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[8]                                                                                          ; |result|block3t:inst4|inst5[8]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[7]                                                                                          ; |result|block3t:inst4|inst5[7]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[6]                                                                                          ; |result|block3t:inst4|inst5[6]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[5]                                                                                          ; |result|block3t:inst4|inst5[5]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[4]                                                                                          ; |result|block3t:inst4|inst5[4]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[3]                                                                                          ; |result|block3t:inst4|inst5[3]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[2]                                                                                          ; |result|block3t:inst4|inst5[2]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[1]                                                                                          ; |result|block3t:inst4|inst5[1]                                                                                             ; out0             ;
; |result|block3t:inst4|inst5[0]                                                                                          ; |result|block3t:inst4|inst5[0]                                                                                             ; out0             ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita0   ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita0      ; sumout           ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita0   ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita1   ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita1      ; sumout           ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita1   ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita1~COUT ; cout             ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita2   ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita2      ; sumout           ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita2   ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita2~COUT ; cout             ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita3   ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_comb_bita3      ; sumout           ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_reg_bit1a[3] ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|safe_q[3]               ; regout           ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_reg_bit1a[2] ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|safe_q[2]               ; regout           ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_reg_bit1a[1] ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|safe_q[1]               ; regout           ;
; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|counter_reg_bit1a[0] ; |result|block3t:inst4|lpm_counter0:inst2|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated|safe_q[0]               ; regout           ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[3]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[3]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[2]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[2]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[1]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode102w[1]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[3]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[3]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[2]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[2]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[1]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode112w[1]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[3]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[3]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[2]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[2]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[1]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode122w[1]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[3]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[3]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[2]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[2]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[1]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode132w[1]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[3]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[3]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[2]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[2]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[1]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode142w[1]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[3]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[3]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[2]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[2]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[1]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode152w[1]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[3]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[3]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[2]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[2]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[1]        ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode162w[1]           ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[3]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[3]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[2]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[2]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[1]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode21w[1]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[3]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[3]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[2]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[2]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[1]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode31w[1]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[3]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[3]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[2]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[2]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[1]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode41w[1]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[3]          ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[3]             ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[2]          ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[2]             ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[1]          ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode4w[1]             ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[3]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[3]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[2]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[2]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[1]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode51w[1]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[3]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[3]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[2]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[2]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[1]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode61w[1]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[3]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[3]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[2]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[2]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[1]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode71w[1]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[3]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[3]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[2]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[2]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[1]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode81w[1]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[3]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[3]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[2]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[2]            ; out0             ;
; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[1]         ; |result|block3t:inst4|lpm_decode0:inst3|lpm_decode:lpm_decode_component|decode_e9f:auto_generated|w_anode91w[1]            ; out0             ;
; |result|block2:inst3|inst18                                                                                             ; |result|block2:inst3|inst18                                                                                                ; out0             ;
; |result|block2:inst3|inst10                                                                                             ; |result|block2:inst3|inst10                                                                                                ; out0             ;
; |result|block2:inst3|inst11                                                                                             ; |result|block2:inst3|inst11                                                                                                ; out0             ;
; |result|block2:inst3|inst17                                                                                             ; |result|block2:inst3|inst17                                                                                                ; out0             ;
; |result|block2:inst3|inst16                                                                                             ; |result|block2:inst3|inst16                                                                                                ; out0             ;
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita0   ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita0      ; sumout           ;
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita0   ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita1   ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita1      ; sumout           ;
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita1   ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita1~COUT ; cout             ;
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita2   ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_comb_bita2      ; sumout           ;
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_reg_bit1a[1] ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|safe_q[1]               ; regout           ;
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_reg_bit1a[0] ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|safe_q[0]               ; regout           ;
; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita0   ; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita0      ; sumout           ;
; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita0   ; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita1   ; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita1      ; sumout           ;
; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita1   ; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita1~COUT ; cout             ;
; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita2   ; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_comb_bita2      ; sumout           ;
; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_reg_bit1a[2] ; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|safe_q[2]               ; regout           ;
; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_reg_bit1a[1] ; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|safe_q[1]               ; regout           ;
; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|counter_reg_bit1a[0] ; |result|block2:inst3|lpm_counter8:inst14|lpm_counter:lpm_counter_component|cntr_cvi:auto_generated|safe_q[0]               ; regout           ;
; |result|block1:inst|inst3                                                                                               ; |result|block1:inst|inst3                                                                                                  ; out0             ;
; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0      ; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0         ; sumout           ;
; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0      ; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita0~COUT    ; cout             ;
; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1      ; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1         ; sumout           ;
; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1      ; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita1~COUT    ; cout             ;
; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita2      ; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_comb_bita2         ; sumout           ;
; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[2]    ; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[2]                  ; regout           ;
; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[1]    ; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[1]                  ; regout           ;
; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|counter_reg_bit1a[0]    ; |result|block1:inst|lpm_counter5:inst|lpm_counter:lpm_counter_component|cntr_d4i:auto_generated|safe_q[0]                  ; regout           ;
+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                                                                  ;
+-------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                               ; Output Port Name                                                                                             ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+------------------+
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_reg_bit1a[2] ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|safe_q[2] ; regout           ;
+-------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                                                                  ;
+-------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                               ; Output Port Name                                                                                             ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+------------------+
; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|counter_reg_bit1a[2] ; |result|block2:inst3|lpm_counter9:inst15|lpm_counter:lpm_counter_component|cntr_poi:auto_generated|safe_q[2] ; regout           ;
+-------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Tue Sep 29 16:37:47 2020
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off lab_2 -c lab_2
Info: Using vector source file "C:/Users/mipro/Desktop/labs5thSem/SIFO/lab_2/result.vwf"
Info: Overwriting simulation input file with simulation results
    Info: A backup of result.vwf called lab_2.sim_ori.vwf has been created in the db folder
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      99.19 %
Info: Number of transitions in simulation is 12336
Info: Vector file result.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 158 megabytes
    Info: Processing ended: Tue Sep 29 16:37:47 2020
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


